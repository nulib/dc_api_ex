# NOTE: This file is auto generated by OpenAPI Generator 7.13.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DcApiEx.Api.FileSet do
  @moduledoc """
  API calls for all endpoints tagged `FileSet`.
  """

  alias DcApiEx.Connection
  import DcApiEx.RequestBuilder

  @doc """

  ### Parameters

  - `connection` (DcApiEx.Connection): Connection to server
  - `id` (String.t): Collection, FileSet, or Work ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_file_set_auth(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def get_file_set_auth(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/file-sets/#{id}/authorization")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {403, false}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (DcApiEx.Connection): Connection to server
  - `id` (String.t): Collection, FileSet, or Work ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, DcApiEx.Model.GetCollectionById200Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_file_set_by_id(Tesla.Env.client, String.t, keyword()) :: {:ok, DcApiEx.Model.GetCollectionById200Response.t} | {:error, Tesla.Env.t}
  def get_file_set_by_id(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/file-sets/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, DcApiEx.Model.GetCollectionById200Response}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (DcApiEx.Connection): Connection to server
  - `id` (String.t): Id of the file set
  - `email` (String.t): Email to send the download link to
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_file_set_download(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def get_file_set_download(connection, id, email, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/file-sets/#{id}/download")
      |> add_param(:query, :email, email)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false},
      {400, false},
      {405, false}
    ])
  end
end
